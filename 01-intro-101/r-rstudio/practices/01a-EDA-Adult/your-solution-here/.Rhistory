# Visualizamos la relación de las variables 'education' y 'sex'
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = sex))+geom_bar()
# unique(datosAdult$education)
# unique(datosAdult$`education-num`)
# filas= nrow(datosAdult)
# E18=c(" Preschool"," 1st-4th"," 5th-6th"," 7th-8th"," 9th"," 10th" ," 11th"," 12th")
# E912=c(" HS-grad"," Some-college"," Assoc-acdm"," Assoc-voc")
# E1316=c(" Bachelors"," Masters" ," Prof-school"," Doctorate")
#  for (i in 1:filas){
# if (datosAdult$education[i] %in% E18){
#   datosAdult$education[i]= "E18"
# } else if(datosAdult$education[i] %in% E912){
#   datosAdult$education[i]= "E912"
# } else if (datosAdult$education[i] %in% E1316){
#   datosAdult$education[i]= "E1316"
# }
# }
# table(datosAdult$education)
library(ggplot2)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
names(datosAdult) <- c("age","workclass","fnlwgt","education","education-num","marital-status","occupation","relationship","race","sex","capital-gain","capital-loss","hour-per-week","native-country","income")
library(ggplot2)
install.packages("dplyr")
library(dplyr)
# Cargamos el juego de datos
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
library(ggplot2)
install.packages("dplyr")
library(dplyr)
# Cargamos el juego de datos
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
dim(datosAdult)
dim(datosAdult)
head(datosAdult[1:7], n = 10)
# Comprobamos el tipo del dataset
typeof(datosAdult)
is.data.frame(datosAdult)
# Extraemos la estructura del dataset
str(datosAdult)
# Trabajamos los atributos con valores vacios
is.na(datosAdult$age[1:10])
# Sumamos los valores "NA"
colSums(is.na(datosAdult))
# Tabla de frecuencia del atributo "age"
table(datosAdult$age)
# Tabla de frecuencia del resto de atributos
table(datosAdult$workclass)
table(datosAdult$fnlwgt)
table(datosAdult$education)
table(datosAdult$`education-num`)
table(datosAdult$`marital-status`)
table(datosAdult$occupation)
table(datosAdult$relationship)
table(datosAdult$race)
table(datosAdult$`capital-gain`)
table(datosAdult$`capital-loss`)
table(datosAdult$`hour-per-week`)
table(datosAdult$`native-country`)
table(datosAdult$income)
# Resumen completo del dataset
summary(datosAdult)
# Resumen de una columna concreta
summary(datosAdult$age)
# Suma de los valores que son interrogante ("?")
colSums(datosAdult == "?")
# Deberían aparecer las sumas de los valores que son interrogantes ("?"), tal y como hemos observado anteriormente en algunos atributos del dataframe:
table(datosAdult$workclass)
table(datosAdult$occupation)
table(datosAdult$`native-country`)
# Observamos los valores absolutos y relativos del atributo 'workclass':
table(datosAdult$workclass)
round(prop.table(table(datosAdult$workclass)),4)
# Como es difícil de entender así, lo visulizamos como un histograma:
hist(table(datosAdult$workclass))
# Realizamos un backup del dataset por si fuera necesario restaurarlo
datosAdultBAK <- datosAdult
# Repetimos el proceso para los otros atributos que tienen valores '?': 'occupation' y 'native-country'
table(datosAdult$occupation)
round(prop.table(table(datosAdult$occupation)),4)
hist(table(datosAdult$occupation))
table(datosAdult$`native-country`)
round(prop.table(table(datosAdult$`native-country`)),4)
hist(table(datosAdult$`native-country`))
# Observamos el promedio del atributo 'age'
attach(datosAdult)
mean(age)
# Redondeamos por abajo
floor(mean(age))
# Redondeamos por arriba
ceiling(mean(age))
# Asignamos la media a una variable
media_age <- ceiling(mean(age))
media_age
# Planteamos el histograma del atributo 'age'
hist(age,
main = "Histograma del atributo 'age'",
xlab = "age",
ylab = "frecuencia")
detach(datosAdult)
# Observamos los valores únicos de los atributos
attach(datosAdult)
apply(datosAdult, MARGIN = 2, FUN = function(x) length(unique(x)))
detach(datosAdult)
# Realizamos la factorización de los atributos con FOR...LOOP
cols <- c("age","workclass","fnlwgt","education","education-num","marital-status","occupation","relationship","race","sex","capital-gain","capital-loss","hour-per-week","native-country","income")
for (i in cols) {
datosAdult[,i] = as.factor(datosAdult[,i])
}
# Visualizamos la relación de las variables 'education' y 'race'
# Primero almacenamos el número de filas del dataset en una variable
filas <- dim(datosAdult)[1]
# Visualizamos con la discretización de los atributos
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = race))+geom_bar()
library(ggplot2)
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = race))+geom_bar()
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = sex))+geom_bar()
t <- table(datosAdult[1:filas, ]$sex,
datosAdult[1:filas, ]$income)
t
dim(t)
for (i in 1:dim(t)[1]){
t[i,] <- t[i,] / sum(t[i,]) * 100
}
t
t
ggplot(data = datosAdult[1:filas,],
aes(x = datosAdult$income, fill = datosAdult$sex)) +
geom_bar(position = 'fill') + ylab('Frecuencia')
ggplot(data = datosAdult[1:filas,],
aes(x = income, fill = sex)) +
geom_bar(position = 'fill') + ylab('Frecuencia')
library(ggplot2)
iris
ggplot(iris, aes( x= Sepal.Width, y = Sepal.Length, colour = Species)) + geom_point()
p <- ggplot(iris, aes( x= Sepal.Width, y = Sepal.Length, colour = Species))
p <- p + geom_point(aes(shape = Species))
p <- p + xlab("Sepal Length") + ylab("Sepal Width") + ggtitle("Sepal Length and Width")
p <- p + geom_smooth(method = "lm")
p + facet_grid(Species ~ .)
p
ggplot(data = ChickWeight, aes (x = Time, y = weight, group = Chick, colour = Diet)) + geom_line() + ggtitle("Crecimiento de pollos por dieta")
ggplot(data = ChickWeight, aes (x = Time, y = weight, group = Chick, colour = Diet)) + geom_line() + ggtitle("Crecimiento de pollos por dieta")
head(ChickWeight)
uno <- subset(ChickWeight, ChickWeight$Chick == 1)
ggplot(data = ChickWeight, aes (x = Time, y = weight, group = Chick, colour = Diet)) + geom_line() + ggtitle("Crecimiento de pollos por dieta")
library(ggplot2)
ggplot(data = ChickWeight, aes (x = Time, y = weight, group = Chick, colour = Diet)) + geom_line() + ggtitle("Crecimiento de pollos por dieta")
library(ggplot2)
mpg
ggplot(mpg, aes (class)) + geom_bar(aes (fill = drv))
library(ggplot2)
iris
ggplot(data = iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma y Curva de Densidad de Sepal Width") +
xlab("Sepal Width") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
ggplot(data = iris, aes(x = Sepal.Width, fill = Species)) +
ggtitle("Curva de Densidad de Sepal Width") +
xlab("Sepal Width") +
geom_density(stat = "density", alpha = I(.2))
library(ggplot2)
iris
ggplot(data = iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma y Curva de Densidad de Sepal Width") +
xlab("Sepal Width") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
ggplot(data = iris, aes(x = Sepal.Width, fill = Species)) +
ggtitle("Curva de Densidad de Sepal Width") +
xlab("Sepal Width") +
geom_density(stat = "density", alpha = I(.2))
library(ggplot2)
iris
ggplot(iris, aes( x= Sepal.Width, y = Sepal.Length, colour = Species)) + geom_point()
p <- ggplot(iris, aes( x= Sepal.Width, y = Sepal.Length, colour = Species))
p <- p + geom_point(aes(shape = Species))
p <- p + xlab("Sepal Length") + ylab("Sepal Width") + ggtitle("Sepal Length and Width")
p <- p + geom_smooth(method = "lm")
p + facet_grid(Species ~ .)
p
library(ggplot2)
iris
ggplot(data = iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma y Curva de Densidad de Sepal Width") +
xlab("Sepal Width") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
ggplot(data = iris, aes(x = Sepal.Width, fill = Species)) +
ggtitle("Curva de Densidad de Sepal Width") +
xlab("Sepal Width") +
geom_density(stat = "density", alpha = I(.2))
library(ggplot2)
ggplot(mpg, aes(x = class, y = hwy)) +
geom_boxplot(aes(colour=class)) +
ggtitle("Consumo por tipo de coche")
