library(ggplot2)
iris
ggplot(data = iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma y Curva de Densidad de Sepal Width") +
xlab("Sepal Width") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
ggplot(mpg, aes(x = class, y = hwy)) +
geom_boxplot(aes(colour=class)) +
ggtitle("Consumo por tipo de coche")
ggplot(data = datosAdult[1:filas,], aes(x = Education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma de Education y Curva de Densidad de Income") +
xlab("Education") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
names(datosAdult) <- c("age","workclass","fnlwgt","education","education-num","marital-status","occupation","relationship","race","sex","capital-gain","capital-loss","hour-per-week","native-country","income")
ggplot(data = datosAdult[1:filas,], aes(x = Education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma de Education y Curva de Densidad de Income") +
xlab("Education") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
filas <- dim(datosAdult)[1]
ggplot(data = datosAdult[1:filas,], aes(x = Education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma de Education y Curva de Densidad de Income") +
xlab("Education") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
ggplot(data = datosAdult[1:filas,], aes(x = datosAdult$Education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma de Education y Curva de Densidad de Income") +
xlab("Education") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
library(ggplot2)
ggplot(data = datosAdult[1:filas,], aes(x = datosAdult$Education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma de Education y Curva de Densidad de Income") +
xlab("Education") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
ggplot(data = datosAdult[1:filas,], aes(x = datosAdult$Education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma de Education y Curva de Densidad de Income") +
xlab("Education")
ggplot(data = datosAdult[1:filas,], aes(x = datosAdult$Education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue") +
ggtitle("Histograma de Education y Curva de Densidad de Income") +
xlab("Education")
ggplot(data = datosAdult[1:filas,], aes(x = datosAdult$Education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue")
ggplot(data = datosAdult, aes(x = datosAdult$Education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue")
ggplot(data = datosAdult, aes(x = datosAdult$education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue")
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = income))+geom_bar()
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = income)) +
ggtitle("Curva de Densidad de Education") +
xlab("Education") +
geom_density(stat = "density", alpha = I(.2))
ggplot(data = datosAdult[1:filas,], aes(x = education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma y Curva de Densidad de Sepal Width") +
xlab("Sepal Width") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
ggplot(data = datosAdult[1:filas,],
aes(x = income,fill = education)) +
ggtitle("Curva de Densidad de Education") +
xlab("Education") +
geom_density(stat = "density", alpha = I(.2))
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = income))+geom_bar()
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = income)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..))
ggplot(data = datosAdult[1:filas,],
aes(x = education)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..))
ggplot(data = datosAdult[1:filas,],
aes(x = race)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..))
ggplot(data = datosAdult[1:filas,],
aes(x = age)) +
geom_histogram(binwidth = 0.2, colour = "black", fill = "steelblue", aes(y=..density..))
ggplot(data = datosAdult[1:filas,],
aes(x = race)) +
geom_histogram(colour = "black", fill = "steelblue", aes(y=..density..))
ggplot(data = datosAdult[1:filas,],
aes(x = age)) +
geom_histogram(colour = "black", fill = "steelblue", aes(y=..density..))
ggplot(data = datosAdult[1:filas,],
aes(x = age)) +
geom_histogram(binwidth = 1, colour = "black", fill = "steelblue", aes(y=..density..))
ggplot(data = datosAdult[1:filas,],
aes(x = age)) +
geom_histogram(binwidth = 5, colour = "black", fill = "steelblue", aes(y=..density..))
ggplot(data = datosAdult[1:filas,],
aes(x = age)) +
geom_histogram(binwidth = 5, colour = "black", fill = "steelblue", aes(y=..density..))
ggtitle("Histograma y Curva de Densidad de Edad") +
xlab("Edad") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
ggplot(data = datosAdult[1:filas,],
aes(x = age)) +
geom_histogram(binwidth = 5, colour = "black", fill = "steelblue", aes(y=..density..)) +
ggtitle("Histograma y Curva de Densidad de Edad") +
xlab("Edad") +
geom_density(stat = "density", alpha = I(.2), fill = "red")
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = income))+geom_bar()
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = income))+geom_bar()+
ggtitle("Histograma de Educación e Ingresos") +
ylab("Ingresos")
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = income))+geom_bar()+
ggtitle("Histograma de Educación e Ingresos") +
xlab("Educacion")
ylab("Ingresos")
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = income))+geom_bar()+
ggtitle("Histograma de Educación e Ingresos") +
xlab("Educacion") +
ylab("Ingresos")
unique(datosAdult$education)
unique(datosAdult$`education-num`)
filas= nrow(datosAdult)
E18=c(" Preschool"," 1st-4th"," 5th-6th"," 7th-8th"," 9th"," 10th" ," 11th"," 12th")
E912=c(" HS-grad"," Some-college"," Assoc-acdm"," Assoc-voc")
E1316=c(" Bachelors"," Masters" ," Prof-school"," Doctorate")
for (i in 1:filas){
if (datosAdult$education[i] %in% E18){
datosAdult$education[i]= "E18"
} else if(datosAdult$education[i] %in% E912){
datosAdult$education[i]= "E912"
} else if (datosAdult$education[i] %in% E1316){
datosAdult$education[i]= "E1316"
}
}
table(datosAdult$education)
hist(table(datosAdult$education))
ggplot(data = datosAdult[1:filas,],
aes(x = education,fill = income))+geom_bar()+
ggtitle("Histograma de Educación e Ingresos") +
xlab("Educacion") +
ylab("Ingresos")
attach(datosAdult)
table(workclass)
round(prop.table(table(datosAdult$workclass)),4)*100
table(workclass)
workclass[workclass == '?'] = 'Private'
table(workclass)
workclass[workclass == '?'] <-'Private'
table(workclass)
workclass[workclass == ' ?'] <-' Private'
table(workclass)
hist(table(datosAdult$workclass))
colSums(datosAdult == " ?")
table(workclass)
detach(datosAdult)
workclass[workclass == ' ?'] <-'Private'
table(workclass)
table(occupation)
attach(datosAdult)
table(occupation)
round(prop.table(table(occupation)),4)
hist(table(occupation))
table(occupation)
round(prop.table(table(occupation)),4)
hist(table(occupation))
table(datosAdult$workclass)
round(prop.table(table(datosAdult$workclass)),4)*100
# Lo visulizamos también como un histograma:
hist(table(datosAdult$workclass))
# Imputamos los valores vacíos a 'Private'
attach(datosAdult)
workclass[workclass == ' ?'] <-'Private'
table(workclass)
detach(datosAdult)
table(datosAdult$workclass)
round(prop.table(table(datosAdult$workclass)),4)*100
hist(table(datosAdult$workclass))
attach(datosAdult)
workclass[workclass == ' ?'] <-'Private'
table(workclass)
detach(datosAdult)
attach(datosAdult)
workclass[workclass == ' ?'] <-'Private'
table(workclass)
detach(datosAdult)
workclass[workclass == ' ?'] <-'Private'
table(workclass)
table(`native-country`)
round(prop.table(table(`native-country`)),4)
hist(table(`native-country`))
`native-country`[`native-country` == ' ?'] <-'United-States'
table(`native-country`)
`native-country`[`native-country` == ' ?'] <-' United-States'
table(`native-country`)
`native-country`[`native-country` == ' ?'] <-  "United-States"
`native-country`[`native-country` == 'United-States'] <-  " United-States"
table(`native-country`)
attach(datosAdult)
apply(datosAdult, MARGIN = 2, FUN = function(x) length(unique(x)))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
# Cargamos el juego de datos
datos <- read.csv('datos_misteriosos',stringsAsFactors = FALSE, header = FALSE)
datos <- read.csv('datos_misteriosos',stringsAsFactors = FALSE, header = FALSE)
setwd("~/")
# Cargamos el juego de datos
datos <- read.csv('datos_misteriosos',stringsAsFactors = FALSE, header = FALSE)
datos <- read.csv('~/datos_misteriosos',stringsAsFactors = FALSE, header = FALSE)
datos <- read.csv("Datos.csv")
datos <- read.csv("datos_misteriosos.csv")
datos
ggplot(datos, aes( x= x, y = y, colour = "Green")) + geom_point()
plot(dm)
plot(datos)
ggplot(datos, aes( x= x, y = y, colour = "Green")) + geom_point()
ggplot(datos, aes( x = x, y = y, colour = x)) + geom_point()
ggplot(datos, aes( x = x, y = y, colour = x)) + geom_point() + theme_classic
library(dyplayer)
library(dplayer)
ggplot(datos, aes( x = x, y = y, colour = x)) + geom_point() + facet_grid(~dataset) +
theme_classic() + ggtitle("datos misteriosos")
ggplot(datos, aes( x = x, y = y, colour = x)) + geom_point() + facet_grid(~dataset) +
theme_classic() + ggtitle("datos misteriosos") + labs(x ="anchura", y = "altura")
ggplot(datos, aes( x = x, y = y, colour = x)) + geom_point() + facet_grid(~dataset) +
theme_grey() + ggtitle("datos misteriosos") + labs(x ="anchura", y = "altura")
ggplot(datos, aes( x = x, y = y, colour = x)) + geom_point() + facet_grid(~dataset) +
theme_grey() + ggtitle("datos misteriosos") + labs(x ="anchura", y = "altura") +
theme(panel.background = element_rect(fill = 'lightblue'))
knitr::opts_chunk$set(echo = TRUE)
datos <- read.csv("Datos.csv")
setwd("~/")
datos <- read.csv("~/Datos.csv")
df <- read.csv2("~/Datos.csv")
View(df)
View(df)
library(dplyr)
library(lubridate)
library(dplyr)
#library(lubridate)
library(ggplot2)
library(dplyr)
#library(lubridate)
library(ggplot2)
'%ni%' <- Negate('%in%')
library(dplyr)
library(lubridate)
install.packages("lubridate")
library(lubridate)
elementos <- df[1:3,2]
df_1=df %>% filter(ID %ni% elementos)
df_2=df %>% filter(ID != elementos)
df_3=df %>% filter(!(ID %ni% elementos))
glimpse(df)
df2 <- df2 %>% select(-Fecha_Pago, -Fecha_Pago_2) %>%
rename(Fecha_Pago = Fecha_Pago_1)
df1 <- df
df2 <- df
df1$Fecha_pago_2 <- NULL
df1$Fecha_Pago <- NULL
df1 <- df1 %>% rename(Fecha_Pago = Fecha_Pago_1)
setwd("~/GitHub/NEOLAND-DS2020-datalabs/NEOLAND-DS2020-datalabs/01-intro-101/r-rstudio/practices/02-EDA-NBA")
knitr::opts_chunk$set(echo = TRUE)
nba<-read.csv("~/GitHub/NEOLAND-DS2020-datalabs/NEOLAND-DS2020-datalabs/01-intro-101/r-rstudio/practices/02-EDA-NBA/NBA_player_of_the_week.csv",header = TRUE)
class(nba)
str(nba)
View(nba)
View(nba)
head(nba)
ls(nba)
names(nba)
row.names(nba)
levels(nba$Conference)
levels(nba$Position)
levels(nba$Position)
levels(nba$Conference)
conf<-(nba$Conference)
conf
nba_bak <- nba
View(nba_bak)
conf[conf == ""] <- NA
conf
str(conf)
levels(nba$Conference)
levels(nba$Conference)
levels(nba$Conference)
levels(conf)
conf <- factor(conf)
levels(conf)
table(conf)
table(conf, exclude = NULL)
levels(conf)
table(conf, exclude = NULL)
levels(conf)
table(conf)
table(conf, exclude = NULL)
nba$Conference <- conf
View(nba)
View(nba)
nba$Height <- factor(nba$Height)
nba$Player <- factor(nba$Player)
nba$Position <- factor(nba$Position)
nba$Season <- factor(nba$Season)
nba$Team <- factor(nba$Team)
nba$Weight <- factor(nba$Weight)
colSums(is.na(nba))
View(nba)
View(nba)
tiempo <- nba$Season.short - nba$Draft.Year
nba <- rbind(nba,tiempo)
tiempo <- factor(tiempo)
nba <- rbind(nba,tiempo)
tiempo
nba <- cbind(nba,tiempo)
tiempo <- nba$Season.short - nba$Draft.Year
nba <- cbind(nba,tiempo)
library(modeest)
summary(nba$tiempo)
install.packages(modeest)
install.packages("modeest")
library(modeest)
mfv(nba$tiempo)
summary(nba$tiempo)
mfv(nba$tiempo)
altura_cm <- nba$Height
altura_cm
levels(altura_cm)
table(altura_cm)
alturas_cm <- nba$Height
library(tidyverse)
install.packages("tidyverse")
library(dplyr)
dplyr(?)
?dplyr
peso_libras <- nba$Weight
peso_libras
levels(peso_libras)
library(sjmisc)
install.packages("sjmisc")
library(sjmisc)
library(sjmisc)
for (peso in peso_libras) {
if (str_contains(peso,"kg")){
peso <- 1
} else {
peso <- 2
}
}
peso_libras
pesos <- nba$Weight
?contains
subset(nba,nba$Weight.contains("kg"))
nba<-read.csv("~/GitHub/NEOLAND-DS2020-datalabs/NEOLAND-DS2020-datalabs/01-intro-101/r-rstudio/practices/02-EDA-NBA/NBA_player_of_the_week.csv",header = TRUE)
conf<-(nba$Conference)
conf[conf == ""] <- NA
conf <- factor(conf)
nba$Conference <- conf
nba$Height <- factor(nba$Height)
nba$Player <- factor(nba$Player)
nba$Position <- factor(nba$Position)
nba$Season <- factor(nba$Season)
nba$Team <- factor(nba$Team)
nba$Weight <- factor(nba$Weight)
tiempo <- nba$Season.short - nba$Draft.Year
nba <- cbind(nba,tiempo)
pesos_kg <- nba$Weight %>%
select(ends_with("kg")) %>%
pesos_kg <- nba$Weight %>%
select(contains("kg")) %>%
pesos_kg <- nba$Weight %>% select(contains("kg")) %>%
pesos_kg <- nba %>% select(contains("kg")) %>%
pesos_kg <- nba$Weight %>% select(contains("kg")) %>% summarise_all(sum)
nba$Position
levels(nba$Position)
levels(nba$Position)
nba$Position[nba$Position == "C"] <- "Center"
levels(nba$Position)
nba$Position[nba$Position == " C"] <- "Center"
nba$Position[nba$Position == " C"] <- " Center"
nba<-read.csv("~/GitHub/NEOLAND-DS2020-datalabs/NEOLAND-DS2020-datalabs/01-intro-101/r-rstudio/practices/02-EDA-NBA/NBA_player_of_the_week.csv",header = TRUE)
nba$Position[nba$Position == " C"] <- " Center"
nba$Position
nba$Position[nba$Position == "C"] <- "Center"
nba$Position
nba$Position[nba$Position == "PG"] <- "Point Guard"
nba$Position[nba$Position == "SG"] <- "Shooting Guard"
nba$Position[nba$Position == "SF"] <- "Small Forward"
nba$Position[nba$Position == "PF"] <- "Power Forward"
nba$Position
filas= nrow(nba)
forward = c("F","F-C","FC")
guard = c("G","G-F","GF")
for (i in 1:filas){
if (nba$Position[i] %in% forward){
nba$Position[i]= "Forward"
} else if (nba$Position[i] %in% guard){
nba$Position[i]= "Guard"
}
}
table(nba$Position)
table(nba$Position)
unique(nba$Team)
equipos <- unique(nba$Team)
length(equipos)
table(nba$Team)
round(prop.table(table(nba$Team)),3)
table(nba$Team)
order(table(nba$Team))
order(table(nba$Team))
table(nba$Team)
